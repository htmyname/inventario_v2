security:
    enable_authenticator_manager: true
    # https://symfony.com/doc/current/security.html#registering-the-user-hashing-passwords
    password_hashers:
        Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface: 'auto'
    # https://symfony.com/doc/current/security.html#loading-the-user-the-user-provider
    encoders:
        App\Entity\User:
            algorithm: auto
    providers:
        user_provider:
            entity:
                class: App\Entity\User
                property: email
    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        main:
            lazy: true
            guard:
                authenticators:
                    - App\Security\LoginFormAuthenticator
            logout:
                path: app_logout
                # where to redirect after logout
                # target: app_any_route

            # activate different ways to authenticate
            # https://symfony.com/doc/current/security.html#the-firewall

            # https://symfony.com/doc/current/security/impersonating_user.html
            # switch_user: true
            remember_me:
                secret: '%kernel.secret%'
                lifetime: 604800 # 1 week in seconds
                path: /

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
        - { path: ^/client/*/, roles: ROLE_ADMIN }
        - { path: ^/services/*/, roles: ROLE_ADMIN }
        - { path: ^/inventario, roles: ROLE_ADMIN }
        - { path: ^/items, roles: ROLE_ADMIN }
        - { path: ^/logs, roles: ROLE_ADMIN }
        - { path: ^/users, roles: ROLE_ADMIN }
        - { path: ^/system, roles: ROLE_ADMIN }
        - { path: ^/cotizacion, roles: ROLE_ADMIN }
        - { path: ^/home/vaciarcaja, roles: ROLE_ADMIN }
        - { path: ^/home/todo/completar, roles: IS_AUTHENTICATED_REMEMBERED }
        - { path: ^/home/todo/*, roles: ROLE_ADMIN }
        - { path: ^/taller/add_inventario, roles: ROLE_ADMIN }
        - { path: ^/home, roles: IS_AUTHENTICATED_REMEMBERED }
        - { path: ^/taller, roles: IS_AUTHENTICATED_REMEMBERED }
        - { path: ^/services, roles: IS_AUTHENTICATED_REMEMBERED }
        - { path: ^/client, roles: IS_AUTHENTICATED_REMEMBERED }
        - { path: ^/profile, roles: IS_AUTHENTICATED_REMEMBERED }
when@test:
  security:
    password_hashers:
      # By default, password hashers are resource intensive and take time. This is
      # important to generate secure password hashes. In tests however, secure hashes
      # are not important, waste resources and increase test times. The following
      # reduces the work factor to the lowest possible values.
      Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface:
        algorithm: auto
        cost: 4 # Lowest possible value for bcrypt
        time_cost: 3 # Lowest possible value for argon
        memory_cost: 10 # Lowest possible value for argon
